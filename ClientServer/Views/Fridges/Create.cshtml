@using Entities.ViewModels.Fridges
@model CreateFridgeViewModel
 @{
    ViewData["Title"] = "Create fridge";
 }
 <h1>New fridge</h1>
<a asp-action="Fridges" style="margin-right:100%" 
     class="btn btn-sm btn-primary">
     Fridges  
</a>
@foreach (var fridgeModel in Model.Models.fridgeModels)
{
    <label>
        <input type="radio" name="model" value="@fridgeModel.Id" onchange='setId()'>
        @fridgeModel.Name
    </label><br />
}
@if(Model.Models.metaData.HasPrevious)
{
    <a asp-action="Create"
        asp-route-pageNumber="@(Model.Models.metaData.CurrentPage-1)"
        class="btn btn-sm btn-primary">
            Back
    </a>
}
@if(Model.Models.metaData.HasNext)
{
    <a asp-action="Create"
        asp-route-pageNumber="@(Model.Models.metaData.CurrentPage+1)"
        class="btn btn-sm btn-primary">
            Next
    </a>
}
<form method="post" asp-controller="Fridges" asp-action="Create">
    <div asp-validation-summary="ModelOnly" id="myCustomSummary" class="text-danger" style="margin:auto"></div>
    <div class="form-group">
        <input asp-for="ModelId" id="modelId" hidden/>
    </div>
    <div class="form-group">
        <label asp-for="Name">Fridge name</label><br />
        <input asp-for="Name" style='width:300px;margin:auto' class="form-control"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="OwnerName">Owner name</label><br />
        <input asp-for="OwnerName" style='width:300px;margin:auto' class="form-control"/>
        <span asp-validation-for="OwnerName" class="text-danger"></span>
    </div>
    <div>
        <button type="submit" class="btn btn-success">Create</button>
    </div>
</form>
<script>
    function setId()
    {
        var modelId=document.getElementById('modelId');
        modelId.value=(this.value)
    }
</script>